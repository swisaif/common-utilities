plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'
    id 'maven-publish'
}
version= '0.1.3'
group = 'com.github.jitpack'

android {
    namespace 'fr.swisaif.common.utilities'
    compileSdk 33

    defaultConfig {
        minSdk 24

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    defaultConfig {
        aarMetadata {
            minCompileSdk = 24
        }
    }
    testFixtures {
        enable = true
    }
    publishing {
        singleVariant('release') {
            withSourcesJar()
        }
    }
}
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}
dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'


    // Dagger Hilt
    implementation "com.google.dagger:hilt-android:2.44.2"
    kapt "com.google.dagger:hilt-compiler:2.44.2"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"

    //Rxjava
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.9'

    //Timber for logging
    implementation 'com.jakewharton.timber:timber:5.0.1'

    //Moshi : JSON library for Android, Java and Kotlin. It makes it easy to parse JSON into Java and Kotlin classes
    implementation("com.squareup.moshi:moshi-kotlin:1.14.0")

    //LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams:2.5.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"


}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release
                groupId = 'com.github.jitpack'
                artifactId = 'common-utilities'
                version = '0.1.3'
            }
        }
    }
}